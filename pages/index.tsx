import Head from "next/head";

import * as THREE from "three";

import { useEffect } from "react";
import SceneInit from "../threejs/SceneInit";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import { Scene } from "three";

function initializeModel(scene: Scene, modelPath: string) {
  const gltfLoader = new GLTFLoader();
  gltfLoader.load(modelPath, (gltfScene) => {
    if (!scene) return;

    const group = new THREE.Group();

    group.add(gltfScene.scene);

    if (modelPath !== "./dog.glb") {
      gltfScene.scene.rotation.y = Math.PI / 8;
      gltfScene.scene.position.set(-10, 0, 42);
      gltfScene.scene.scale.set(0.2, 0.2, 0.2);
    } else {
      gltfScene.scene.position.y -= 20;
      gltfScene.scene.scale.set(10, 10, 10);
    }

    function anim() {
      group.rotation.y += 0.002;
      window.requestAnimationFrame(anim);
    }

    anim();

    scene.add(group);
    console.log("added gltf");
  });
}
export default function Home() {
  useEffect(() => {
    const test = new SceneInit("myThreeJsCanvas");
    test.initialize();
    test.animate();

    if (!test.scene) return;
    initializeModel(test.scene, "./SV_web");

    return () => {
      test.onUnmount();
    };
  }, []);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        style={{
          overflow: "hidden",
          minHeight: "100vh",
        }}
      >
        <canvas
          id="myThreeJsCanvas"
          style={{
            display: "block",
            background: "red",
          }}
        />
      </main>
    </>
  );
}
